import telebot
import wikipedia


import data
import buttons
import random_article
import get_article


bot = telebot.TeleBot("5058628758:AAGZabz49Yi-f6RRYeEm3_l6iwGBfKEi9ac");


language = "ru"
wikipedia.set_lang(language)


@bot.message_handler(content_types=["text"])
def start(message):
    answer = message.text
    if answer == "–ü—Ä–∏–≤–µ—Ç üëãüèª" or answer == "/start":
        text = "–ü—Ä–∏–≤–µ—Ç, –≤—ã–±–µ—Ä–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥–ª—è —Å–µ–±—è üòâ"
        msg = bot.send_message(message.from_user.id, text , reply_markup = buttons.get_article())
        bot.register_next_step_handler(msg, functions)
    else:
        msg = bot.send_message(message.from_user.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É üëÄ" , reply_markup = buttons.get_hi())
        bot.register_next_step_handler(msg, start)


def restart(message):
    answer = message.text
    if answer == "–î–∞ ‚úÖ":
        text = "–†–∞–¥–∞, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –µ—â—ë —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞–π—Ç–∏ üòâ"
        msg = bot.send_message(message.from_user.id, text , reply_markup = buttons.get_article())
        bot.register_next_step_handler(msg, functions)
    elif answer == "–ù–µ—Ç ‚ùå":
        msg = bot.send_message(message.from_user.id, "–ñ–∞–ª—å, –±—ã–ª–∞ —Ä–∞–¥–∞ –ø–æ–º–æ—á—å, –ø–æ–∫–∞ üôÇ", reply_markup = buttons.get_hi())
        bot.register_next_step_handler(msg, start)
    else:
        msg = bot.send_message(message.from_user.id, "–ù–µ–º–Ω–æ–≥–æ —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –≤—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ üòî", reply_markup = buttons.get_new_function())
        bot.register_next_step_handler(msg, restart)


def functions(message):
    answer = message.text
    if answer == "–ù–∞–π—Ç–∏ —Å—Ç–∞—Ç—å—é –≤ Wikipedia üîç":
        text = "–û–∫–µ–π, —Å–µ–π—á–∞—Å –Ω–∞–π–¥—É —Ç–µ–±–µ —Å—Ç–∞—Ç—å—é üôÉ\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ üòä"
        msg = bot.send_message(message.from_user.id, text)
        bot.register_next_step_handler(msg , user_word)
    elif answer == "–°–ª—É—á–∞–π–Ω–∞—è —Å—Ç–∞—Ç—å—è ü§î":
        bot.send_message(message.from_user.id, "–°–µ–π—á–∞—Å —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞–π–¥—ë–º –¥–ª—è —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–Ω—å–∫–æ–µ üôÉ")
        bot.send_message(message.from_user.id, random_article.get_random_article(), parse_mode='Markdown')

        text = "–î–∞–≤–∞–π –µ—â—ë —á—Ç–æ-–Ω–∏–±—É–¥—å —É–∑–Ω–∞–µ–º? üòá"
        msg = bot.send_message(message.from_user.id, text , reply_markup = buttons.get_new_function())
        bot.register_next_step_handler(msg, restart)
    else:
        msg = bot.send_message(message.from_user.id, "–ù–µ–º–Ω–æ–≥–æ —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –≤—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ üòî", reply_markup = buttons.get_article())
        bot.register_next_step_handler(msg, functions)


def user_word(message):
    generalizing_word_of_user = message.text
    generalizing_word = wikipedia.suggest(generalizing_word_of_user)

    if generalizing_word != None:
        msg = bot.send_message(message.from_user.id, "–¢–∞–∫–æ–π —Å—Ç–∞—Ç—å–∏ –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ—Ç, –¥–∞–≤–∞–π –Ω–∞–π–¥—ë–º —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ ü•∫", reply_markup = buttons.get_article())
        bot.register_next_step_handler(msg, functions)
    else:
        text = "–°–º–æ–≥–ª–∞ –Ω–∞–π—Ç–∏ —Ç–∞–∫–∏–µ —Å—Ç–∞—Ç—å–∏, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö üëÄ\n"
        bot.send_message(message.from_user.id, text + get_article.get_possible_articles(message.from_user.id, generalizing_word_of_user))
        msg = bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–º–µ—Ä —Å—Ç–∞—Ç—å–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å üòÑ")
        bot.register_next_step_handler(msg, user_article)


def user_article(message):
    answer = message.text
    possible_numbers = [str(n) for n in range(1, len(data.user_search[message.from_user.id]))]
    if answer in possible_numbers:
        text = get_article.get_article(data.user_search[message.from_user.id][int(answer) - 1])
        bot.send_message(message.from_user.id, text, parse_mode='Markdown')
        msg = bot.send_message(message.from_user.id, "–ë—É–¥–µ–º –µ—â—ë —á—Ç–æ-–Ω–∏–±—É–¥—å –µ—â—ë –∏—Å–∫–∞—Ç—å? ü§î", reply_markup = buttons.get_new_function())
        bot.register_next_step_handler(msg, restart)
    else:
        msg = bot.send_message(message.from_user.id, "–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ ‚òπÔ∏è")
        bot.register_next_step_handler(msg, user_article)


bot.polling(none_stop=True, interval=0)